:=============================================================================
:         MODULE SUBSTANCE NAMELIST with  CPP key : SUBSTANCE 
:=============================================================================
:
:-----------------------------------------------------------------------------
: nmlnbvar : number of each type of substance to be defined (other than T & S)
:-----------------------------------------------------------------------------
:    nv_dis : number of dissolved susbtances
:    nv_ncp : number of  Non Constitutive Particulate subtances
:    nv_fix : number of  fixed susbtances (not advected)
:    nv_bent : number of benthic susbtances
:    nv_grav : number of susbtances type GRAVELS (only if cppkey MUSTANG)
:    nv_sand : number of susbtances type SAND (only if cppkey MUSTANG)
:    nv_mud : number of susbtances type MUD (only if cppkey MUSTANG)
:    nv_sorb : number of particulate susbtances sorbed on an other particule
:
 &nmlnbvar
    nv_dis=0
    nv_ncp=0
    nv_fix=0
    nv_bent=0 
    nv_grav=0
    nv_sand=2
    nv_mud=0
    nv_sorb=0 /
:-----------------------------------------------------------------------------
: nmlsands : Characterization of SAND substances (used only if defined 
:            MUSTANG)
:            If nv_sand = 0 this namelist is not read
:-----------------------------------------------------------------------------
:    name_var_n() : string, name of variable
:    long_name_var_n() : string, long name of variable
:    standard_name_var_n() : string, standard name of variable
:    unit_var_n() : string, unit of concentration of variable
:    flx_atm_n() : real, uniform atmospherical deposition (unit/m2/s) 
:    cv_rain_n() : real, concentration in rainwater (unit/m3 of water)
:    cini_wat_n() : real, initial concentration in water column (unit/m3)
:    cini_air_n() : real, initial concentration in air
:    l_out_subs_n() : boolean, saving in output file if TRUE
:    init_cv_name_n() : string, name of substance read from initial condition 
:                       file
:    obc_cv_name_n() : string, name of substance read from obc file
:    cini_sed_n() : real, initial concentration in sediment (quantity/kg of 
:                   dry sediment)  (only if cppkey MUSTANG)
:    tocd_n() : real, critical stress of deposition (N/m2) 
:    ros_n()  : real, density of particle (kg/m3)
:    l_bedload_n() : boolean, allow bedload transport
:    diam_n() : diameter of particles
:    l_sand2D() : boolean, to treat sand variable as 2D variable (used only if 
:                 key_sand2D)
:    l_outsandrouse()  : boolean, to use a reconstitution of a ROUSE profil 
:                        for output in water column (used only if key_sand2D 
:                        and l_sand2D is TRUE for this variable)
:
:  WARNING if several sands: start with the coarser sands and continue more 
:  and more finely
:
 &nmlsands
    name_var_n(1)='GRAV'
      long_name_var_n(1)='GRAV'
      standard_name_var_n(1)='GRAV'
      unit_var_n(1)='kg.m-3'
      flx_atm_n(1)=0.0
      cv_rain_n(1)=0.0
      cini_wat_n(1)=0.0
      cini_sed_n(1)=0.5
      cini_air_n(1)=0.0
      l_out_subs_n(1)=.TRUE.
      l_bedload_n(1)=.TRUE.
      init_cv_name_n(1)='GRAV'
      obc_cv_name_n(1)='GRAV'
      tocd_n(1)=0.5
      ros_n(1)=2650.0
      diam_n(1)=0.0006
      l_sand2D_n(1)=.FALSE.
      l_outsandrouse_n(1)=.FALSE. 
    name_var_n(2)='SAND'
      long_name_var_n(2)='SAND'
      standard_name_var_n(2)='SAND'
      unit_var_n(2)='kg.m-3'
      flx_atm_n(2)=0.0
      cv_rain_n(2)=0.0
      cini_wat_n(2)=0.0
      cini_sed_n(2)=0.5
      cini_air_n(2)=0.0
      l_out_subs_n(2)=.TRUE.
      l_bedload_n(2)=.TRUE.
      init_cv_name_n(2)='SAND'
      obc_cv_name_n(2)='SAND'
      tocd_n(2)=0.5
      ros_n(2)=2650.0
      diam_n(2)=0.000255
      l_sand2D_n(2)=.FALSE.
      l_outsandrouse_n(2)=.FALSE.  /
